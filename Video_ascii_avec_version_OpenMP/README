
Vous trouverez ci-joint les explications pour le bon fonctionnement de ce programme, suivre dans l'ordre les parties I,II,III et IV.

/!\ Note importante, nous avons introduit une erreur dans le code récemment que nous n'avons pas pu corriger à temps, il se peut donc que le code ne soit pas totalement fonctionnel. Une video de 2 secondes est située dans le dossier video pour un simple test.

	I : Tout d'abord executer Installation.sh : bash Installation.sh	(va installer plusieurs bibliotheques, vous trouverez une explication de cet executable plus bas dans ce README)

	II : Pour utiliser le programme mettre la video que l'on souhaite transformer dans le dossier video.
		
		On peut utiliser par exemple https://notube.io/fr/youtube-app-v8 pour télécharger une video youtube au format mp4.

	III : Une fois la video dans le dossier video on COMPILE : make

	IV : Finnalement en SEQUENTIEL le programme s'execute comme suit:

		Execution: ./modif_img argv[1] argv[2] argv[3] argv[4] argv[5]

		argv[1] = nombre de threads par blocs selon x.
		argv[2] = nombre de threads par blocs selon y.
		argv[3] = pourcentage de résolution de l'image entre 0 et 100 en largeur (100 % indique qu'il y aura autant d'ascii en largeur que de pixels)
		argv[4] = nombre d'ascii différents utilisés pour générer l'image (compris entre 1 et 40).
		argv[5] = nom de la video à modifier

		/!\ EXEMPLE : ./modif_img 30 30 50 10 my_video.mp4
		
	IV : En PARALLELE le programme s'execute comme suit:
	
		Execution: ./modif_img_openmp argv[1] argv[2] argv[3] argv[4] argv[5] argv[6]

		argv[1] = nombre de threads par blocs selon x.
		argv[2] = nombre de threads par blocs selon y.
		argv[3] = pourcentage de résolution de l'image entre 0 et 100 en largeur (100 % indique qu'il y aura autant d'ascii en largeur que de pixels)
		argv[4] = nombre d'ascii différents utilisés pour générer l'image (compris entre 1 et 40).
		argv[5] = nom de la video à modifier
		argv[6] = nombre de processus

		/!\ EXEMPLE : ./modif_img_openmp 30 30 50 10 my_video.mp4 4



################################################################	Explication de l'executable Intsallation.sh	################################################################################

	1.	Pour pourvoir générer des PNG il faut installer ImageMagick: - sudo apt-get install imagemagick

		ImageMagick n'étant pas destiné principalement à l'utilisation que nous en avons faite il faut apporter quelques modifications à la bilibothèque. Il faut donc executer les 3 commandes 		suivantes:

		- chmod 777 /etc/ImageMagick-6/policy.xml
		- sudo rm /etc/ImageMagick-6/policy.xml
		- sudo cp autre/EXAMPLE_policy.xml /etc/ImageMagick-6/policy.xml

		Les modifiations portent sur le maximum des ressources allouées autorisé ainsi que sur des autorisations portant sur les formats *.txt. Pour les modifier il suffit de modifier le fichier 			"EXAMPLE_policy.xml" et de refaire les manipulations.

	2.	D'autres bibliotheques seront necessaires:
	 	
			- sudo apt-get install libfreeimage3 libfreeimage-dev (lib pour le traitement d'images)
			- sudo apt install python3-opencv	(pour traiter les videos)
			- sudo apt-get install vlc		(pour lire les videos) 
			- sudo apt install ffmpeg		(pour traiter le son et video)
			- sudo pip install ffpyplayer		(pour traiter le son)

##########################################################################################################################################################################################################
